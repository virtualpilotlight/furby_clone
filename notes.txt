Furby code
there are motors
there's alight sensor
there is IR
there is a hunger counter
the light sensor decremts 2 instead of 1 on hunger counter
There is an IR sleep command, the protocol is returned before sleep is initiated.
There is a sick counter. 
If hunger gets low enought sick counter is triggered. In that case each sensor deducts two instead of one for each hit. #what does this mean?
There is a diagnostics mode once finished clear memory, rest hungry, set sick to FF. 
randomly coose new name and voice. 
EEPROM #not sure what that is.
EEORM has a diagnostic to test all locations for pass/fail #not sure what this means
Has a light routine
change hide and seek egg to light,light,light,tummy.
change sick/hungry counter so that it can only get so sick and not continue down to zero. (MAX_SICK)
In the diagnostic mode test the motor position forward continuously untill the front switch is pressed then goes reverse untill the front switch is pressed, then does normal position.
calibration stops at the calibration switch
on powerup tilt and invert are used to generate random numbers. If feed switch is pressed for cold boot use it to generate random numbers
regardless of age 25% of the time randomly pull speech from age to generate more Furbish at older ages. 
Twinkle song egg #the what?
When song is complete if both front and back switches are pressed go into deep sleep, and only invert can wake us up.
The tilt switch can normally awaken.
TI pitch control. 
bit 7 set = subtract value from current course value
clr = add value to current course value
bit 6 set = select music pitch table
clr = select normal speech pitch table
bit 0-5 value to change course value (no change = 0)
has a math routine in 'say_0' converts the value for + or -
if <80 then subtract 80 to get the minus version or 00
ie if the number is 70 then TI gets sent 10 (which is -10)
If the number is 80 or > 80 then gets sent literal as a positive. 
note max positive is 8F (+16 from normal voice of 00)
max negative is 2F (-47 from normal voice of 00)
This is a differance of 80h - 2Fh or 51h
8Fh is hi voice (8f is very squeeeeeke)
2Fh lo voice (very low)
The routine 'Say_0' allows a +- decimal in the speech table
A value of 80 = no change or 00 sent to TI
81 = +1
8f = +16
value of 7f = -1 from normal voice
70 = -16
voice selection should take into consideration that the hi voice selection plus an aditional offset is never greater than 8f or low voice never less than 2f
vioce1  EQU 83h (+3) hi voice
voice2 EQU 7Ah (-6) mid voice
voice3 EQU 71h (-15) love voice

we converted ato a random selection table but since all voice table use the equation plus some offset we always assign voice 3 which is the loest and based on the random power up pitch selection, the ram location 'Rvoice' holds the number to add to the voice offset receivewd from the macro table. 
voice EQU Voice3 
pitch (choose voice1, Voice2, Voice3) (voice2=norm)
Select Voice3 since it is the lowest and tehn add the difference to get Voice2 or Voice3. Here we assign that difference to an equate to be used in the voice table that is randomly selected on power up.

S-voice EQU 18 ;Voice3 + 18d = Voice 1
S_voice2 EQU 09 ;Voice3 + 09d = Voice2
S_voice3 EQU 0 ;Voice3 + 00d = Voice3

Motor speed pulse width
motor_on = power to motor motor_off is none
Mpulse_on EQU 16
Mpulse_off EQY 16

so basically there is a front and a back button, an IR and light sensor, a mouth button a speaker and a motion sensor that can detect both tilt and inversion. There are also some motors for the ears, eyes and mouth. It has a hunger counter and a sick counter, there is an age. IT has a mic input as well. IIRC there was also a reset button on the bottom in additon to an on off switch. It has a sleep and a wake up function. There's also a bored counter.
Theres a bit with check sums that initializes the sensors and counters. 
Theres a section about how often each sensor is random vs sequential. 

